# Copyright (c) 2018 Damien Ciabrini
# This file is part of ngdevkit
#
# ngdevkit is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# ngdevkit is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with ngdevkit.  If not, see <http://www.gnu.org/licenses/>.

include ../../Makefile.config

# common devkit tools
PREFIX=m68k-neogeo-elf
CC=$(LOCALDIR)/bin/$(PREFIX)-gcc
OBJCOPY=$(LOCALDIR)/bin/$(PREFIX)-objcopy
Z80OBJCOPY=$(LOCALDIR)/bin/sdobjcopy
TILETOOL=$(LOCALDIR)/bin/tiletool.py
PALTOOL=$(LOCALDIR)/bin/paltool.py

# macOS doesn't ship truncate
ifeq ($(shell uname -s), Darwin)
TRUNCATE=python -c 'import sys;open(sys.argv[3],"a").truncate(int(sys.argv[2]))'
else
TRUNCATE=truncate
endif

ASSETS=../assets

# for macOS, may interfere with System Integrity Protection
define export_path
$(eval
ifeq ($(shell uname -s), Darwin)
$(1): export DYLD_LIBRARY_PATH=$(LOCALDIR)/lib:$(DYLD_LIBRARY_PATH)
else
$(1): export LD_LIBRARY_PATH=$(LOCALDIR)/lib:$(LD_LIBRARY_PATH)
endif
)
endef

cart: prom crom srom vrom mrom
	cd rom && for i in *.??; do ln -nsf $$i $${i%.*}.bin; done; \
	printf "===\nhttps://github.com/dciabrin/ngdevkit\n===" | zip -qz puzzledp.zip *.?? *.bin
	@printf "\nType 'make nullbios' to copy the open source BIOS in ./rom\n"

nullbios:
	cp ../../nullbios/rom/neogeo.zip rom

assets:
	$(MAKE) -C $(ASSETS) all

rom:
	mkdir $@

clean: common-clean

common-clean:
	rm -rf *.elf *.o *~ rom


# Emulator targets
#
ifeq ($(strip $(SDL2_DLL)),)
# regular case: pass the rompath to the emulator
$(call export_path,gngeo)
gngeo:
	$(LOCALDIR)/bin/gngeo -b glsl --scale 3 --no-resize --shaderpath=$(LOCALDIR)/../toolchain/qcrt-glsl --shader qcrt-flat.glslp -i rom puzzledp

$(call export_path,gngeo-fullscreen)
gngeo-fullscreen:
	$(LOCALDIR)/bin/gngeo -b glsl --fullscreen --scale 5 --no-resize --shaderpath=$(LOCALDIR)/../toolchain/qcrt-glsl --shader qcrt-flat.glslp -i rom puzzledp

else
# MinGW: copy ROMs to the gngeo dir
gngeo:
	cp rom/puzzledp.zip rom/neogeo.zip $(GNGEO_INSTALL_PATH)/roms && (cd $(GNGEO_INSTALL_PATH) &&  ./gngeo.exe --scale 3 --no-resize puzzledp)

gngeo-fullscreen:
	cp rom/puzzledp.zip rom/neogeo.zip $(GNGEO_INSTALL_PATH)/roms && (cd $(GNGEO_INSTALL_PATH) &&  ./gngeo.exe --fullscreen --scale 5 --no-resize puzzledp)

endif

.PHONY: cart nullbios common-clean gngeo gngeo-fullscreen
